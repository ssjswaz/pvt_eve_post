name: events_post_run

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  run-notebook:
    runs-on: ubuntu-22.04

    env:
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      CHAT_ID: ${{ secrets.CHAT_ID }}
      token: ${{ secrets.TOKEN }}
      GH_PERSONAL_TOKEN: ${{ secrets.TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.14

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter nbconvert ipykernel

      - name: Install Jupyter kernel
        run: |
          python -m ipykernel install --user --name=python3

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gnupg curl
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /usr/share/keyrings/githubcli-archive-keyring.gpg > /dev/null
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y


      - name: Authenticate gh CLI
        run: |
            echo "${GH_PERSONAL_TOKEN}" | gh auth login --with-token
        env:
            GH_TOKEN: ${{ secrets.GH_PERSONAL_TOKEN }}  

      

      - name: Acquire Lock
        run: |
          LOCK_TITLE="REPO-LOCK"
          echo " Checking for existing lock..."
          LOCK_EXISTS=$(gh issue list --search "$LOCK_TITLE" --json title --jq '.[].title' | grep "$LOCK_TITLE" || true)
          if [[ "$LOCK_EXISTS" != "" ]]; then
            echo "Lock exists. Waiting..."
            while [[ "$LOCK_EXISTS" != "" ]]; do
              sleep 10
              LOCK_EXISTS=$(gh issue list --search "$LOCK_TITLE" --json title --jq '.[].title' | grep "$LOCK_TITLE" || true)
            done
          fi
          echo " Lock acquired. Creating issue..."
          gh issue create --title "$LOCK_TITLE" --body "Lock held by workflow $GITHUB_RUN_ID"

      - name: Run Jupyter Notebook
        run: |
          jupyter nbconvert --to notebook --execute events_post.ipynb --output events_post_run_output.ipynb

      - name: Release Lock
        if: always()
        run: |
          LOCK_TITLE="REPO-LOCK"
          echo " Releasing lock..."
          LOCK_ID=$(gh issue list --search "$LOCK_TITLE" --json number --jq '.[0].number' || true)
          if [[ "$LOCK_ID" != "" ]]; then
            gh issue close "$LOCK_ID"
            echo " Lock released"
          fi
